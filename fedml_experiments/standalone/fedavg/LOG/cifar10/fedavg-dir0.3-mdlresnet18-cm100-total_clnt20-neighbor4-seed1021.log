Namespace(batch_size=128, ci=0, client_num_in_total=20, client_num_per_round=4, client_optimizer='sgd', comm_round=100, data_dir='/Date/FL/DisPFL-master/data/', dataset='cifar10', epochs=5, frac=0.2, frequency_of_the_test=1, gpu=0, identity='fedavg-dir0.3-mdlresnet18-cm100-total_clnt20-neighbor4-seed1021', lr=0.1, lr_decay=0.998, model='resnet18', momentum=0, partition_alpha=0.3, partition_method='dir', seed=1021, tag='test', wd=0.0005)
cuda:0
running at devicecuda:0
*********partition data***************
train_num2500  test_num503
client_idx = 0, local_sample_number = 2500
train_num2500  test_num506
client_idx = 1, local_sample_number = 2500
train_num2500  test_num502
client_idx = 2, local_sample_number = 2500
train_num2500  test_num504
client_idx = 3, local_sample_number = 2500
train_num2500  test_num505
client_idx = 4, local_sample_number = 2500
train_num2500  test_num502
client_idx = 5, local_sample_number = 2500
train_num2500  test_num504
client_idx = 6, local_sample_number = 2500
train_num2500  test_num502
client_idx = 7, local_sample_number = 2500
train_num2500  test_num503
client_idx = 8, local_sample_number = 2500
train_num2500  test_num503
client_idx = 9, local_sample_number = 2500
train_num2500  test_num504
client_idx = 10, local_sample_number = 2500
train_num2500  test_num502
client_idx = 11, local_sample_number = 2500
train_num2500  test_num503
client_idx = 12, local_sample_number = 2500
train_num2500  test_num504
client_idx = 13, local_sample_number = 2500
train_num2500  test_num503
client_idx = 14, local_sample_number = 2500
train_num2500  test_num504
client_idx = 15, local_sample_number = 2500
train_num2500  test_num504
client_idx = 16, local_sample_number = 2500
train_num2500  test_num505
client_idx = 17, local_sample_number = 2500
train_num2500  test_num504
client_idx = 18, local_sample_number = 2500
train_num2500  test_num505
client_idx = 19, local_sample_number = 2500
DATA Partition: Train [704, 367, 2, 193, 0, 15, 202, 0, 1008, 9]; Test [141, 74, 1, 39, 0, 3, 41, 0, 202, 2]
DATA Partition: Train [38, 0, 138, 1, 38, 141, 1426, 216, 6, 496]; Test [8, 0, 28, 1, 8, 29, 286, 44, 2, 100]
DATA Partition: Train [1077, 0, 0, 755, 0, 109, 7, 293, 225, 34]; Test [216, 0, 0, 151, 0, 22, 2, 59, 45, 7]
DATA Partition: Train [226, 309, 0, 545, 207, 1, 281, 0, 198, 733]; Test [46, 62, 0, 109, 42, 1, 57, 0, 40, 147]
DATA Partition: Train [56, 1248, 1, 46, 282, 1, 374, 470, 0, 22]; Test [12, 250, 1, 10, 57, 1, 75, 94, 0, 5]
DATA Partition: Train [695, 8, 49, 192, 0, 1272, 5, 25, 0, 254]; Test [139, 2, 10, 39, 0, 255, 1, 5, 0, 51]
DATA Partition: Train [93, 211, 230, 558, 1, 12, 620, 2, 0, 773]; Test [19, 43, 46, 112, 1, 3, 124, 1, 0, 155]
DATA Partition: Train [59, 0, 865, 12, 155, 413, 338, 658, 0, 0]; Test [12, 0, 173, 3, 31, 83, 68, 132, 0, 0]
DATA Partition: Train [0, 6, 150, 621, 515, 6, 8, 534, 5, 655]; Test [0, 2, 30, 125, 103, 2, 2, 107, 1, 131]
DATA Partition: Train [0, 32, 426, 1058, 840, 0, 4, 24, 48, 68]; Test [0, 7, 86, 212, 168, 0, 1, 5, 10, 14]
DATA Partition: Train [76, 0, 500, 5, 72, 207, 266, 1309, 17, 48]; Test [16, 0, 100, 1, 15, 42, 54, 262, 4, 10]
DATA Partition: Train [284, 319, 135, 104, 628, 259, 0, 24, 148, 599]; Test [57, 64, 27, 21, 126, 52, 0, 5, 30, 120]
DATA Partition: Train [805, 107, 10, 13, 19, 225, 0, 241, 1079, 1]; Test [161, 22, 2, 3, 4, 45, 0, 49, 216, 1]
DATA Partition: Train [40, 18, 318, 64, 1125, 241, 7, 414, 112, 161]; Test [8, 4, 64, 13, 225, 49, 2, 83, 23, 33]
DATA Partition: Train [87, 964, 373, 24, 21, 232, 69, 255, 475, 0]; Test [18, 193, 75, 5, 5, 47, 14, 51, 95, 0]
DATA Partition: Train [452, 38, 5, 33, 344, 616, 245, 57, 422, 288]; Test [91, 8, 1, 7, 69, 124, 49, 12, 85, 58]
DATA Partition: Train [149, 24, 402, 13, 13, 333, 3, 383, 737, 443]; Test [30, 5, 81, 3, 3, 67, 1, 77, 148, 89]
DATA Partition: Train [6, 531, 627, 7, 2, 1, 614, 0, 375, 337]; Test [2, 107, 126, 2, 1, 1, 123, 0, 75, 68]
DATA Partition: Train [25, 730, 692, 633, 292, 42, 0, 34, 41, 11]; Test [5, 146, 139, 127, 59, 9, 0, 7, 9, 3]
DATA Partition: Train [128, 88, 77, 123, 446, 874, 531, 61, 104, 68]; Test [26, 18, 16, 25, 90, 175, 107, 13, 21, 14]
create_model. model_name = resnet18
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): GroupNorm(32, 64, eps=1e-05, affine=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 64, eps=1e-05, affine=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 64, eps=1e-05, affine=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (shortcut): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): GroupNorm(32, 128, eps=1e-05, affine=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 128, eps=1e-05, affine=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 128, eps=1e-05, affine=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 256, eps=1e-05, affine=True)
      (shortcut): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 256, eps=1e-05, affine=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 256, eps=1e-05, affine=True)
      (shortcut): Sequential()
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 512, eps=1e-05, affine=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 512, eps=1e-05, affine=True)
      (shortcut): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): GroupNorm(32, 512, eps=1e-05, affine=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): GroupNorm(32, 512, eps=1e-05, affine=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): GroupNorm(32, 512, eps=1e-05, affine=True)
      (shortcut): Sequential()
    )
  )
  (linear): Linear(in_features=512, out_features=10, bias=True)
)
############setup_clients (START)#############
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
self.local_sample_number = 2500
############setup_clients (END)#############
################Communication round : 0
client_indexes = [18  1 19  8]
client_indexes = [ 1  8 18 19]
@@@@@@@@@@@@@@@@ Training Client CM(0): 1
Client Index = 1	Epoch: 0	Loss: 4.638064
Client Index = 1	Epoch: 1	Loss: 1.437830
Client Index = 1	Epoch: 2	Loss: 1.315800
Client Index = 1	Epoch: 3	Loss: 1.284450
Client Index = 1	Epoch: 4	Loss: 1.269167
